// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using Volo.Abp.EntityFrameworkCore;
using hmt_energy_csharp.EntityFrameworkCore.Oracle;

#nullable disable

namespace hmtenergycsharp.OracleMigrations
{
    [DbContext(typeof(hmt_energy_csharpOracleDbContext))]
    [Migration("20250311053603_Update_ER_MGS")]
    partial class UpdateERMGS
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.Oracle)
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hmt_energy_csharp.CII.Coefficients.CIICoefficient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("Coefficient1")
                        .HasPrecision(16)
                        .HasColumnType("DECIMAL(16,0)");

                    b.Property<decimal?>("Coefficient2")
                        .HasPrecision(6, 4)
                        .HasColumnType("DECIMAL(6,4)");

                    b.Property<decimal?>("ContainHigh")
                        .HasPrecision(2)
                        .HasColumnType("DECIMAL(2,0)");

                    b.Property<decimal?>("ContainLow")
                        .HasPrecision(2)
                        .HasColumnType("DECIMAL(2,0)");

                    b.Property<decimal?>("HighValue")
                        .HasPrecision(6)
                        .HasColumnType("DECIMAL(6,0)");

                    b.Property<decimal?>("LowValue")
                        .HasPrecision(6)
                        .HasColumnType("DECIMAL(6,0)");

                    b.Property<string>("ShipType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("Sort")
                        .HasPrecision(4)
                        .HasColumnType("DECIMAL(4,0)");

                    b.Property<string>("WeightCondition")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("WeightValue")
                        .HasPrecision(6)
                        .HasColumnType("DECIMAL(6,0)");

                    b.Property<DateTime?>("create_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("delete_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("update_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("energy_ciicoefficient", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.CII.FuelCoefficients.FuelCoefficient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameCN")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameEN")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("Sort")
                        .HasPrecision(4)
                        .HasColumnType("DECIMAL(4,0)");

                    b.Property<decimal?>("Value")
                        .HasPrecision(6, 4)
                        .HasColumnType("DECIMAL(6,4)");

                    b.Property<DateTime?>("create_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("delete_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("update_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("energy_fuelcoefficient", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.CII.Ratings.CIIRating", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("ContainHigh")
                        .HasPrecision(2)
                        .HasColumnType("DECIMAL(2,0)");

                    b.Property<decimal?>("ContainLow")
                        .HasPrecision(2)
                        .HasColumnType("DECIMAL(2,0)");

                    b.Property<decimal?>("HighValue")
                        .HasPrecision(6)
                        .HasColumnType("DECIMAL(6,0)");

                    b.Property<decimal?>("LowValue")
                        .HasPrecision(6)
                        .HasColumnType("DECIMAL(6,0)");

                    b.Property<string>("Rating")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("RatingValue")
                        .HasPrecision(6, 4)
                        .HasColumnType("DECIMAL(6,4)");

                    b.Property<string>("ShipType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("Sort")
                        .HasPrecision(4)
                        .HasColumnType("DECIMAL(4,0)");

                    b.Property<string>("WeightCondition")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("create_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("delete_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("update_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("energy_ciirating", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Energy.Batteries.Battery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<decimal?>("MaxTEMP")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<string>("MaxTEMPBox")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("MaxTEMPNo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("MaxVoltage")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<string>("MaxVoltageBox")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("MaxVoltageNo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("MinTEMP")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<string>("MinTEMPBox")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("MinTEMPNo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("MinVoltage")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<string>("MinVoltageBox")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("MinVoltageNo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<decimal?>("SOC")
                        .HasPrecision(8, 4)
                        .HasColumnType("DECIMAL(8,4)");

                    b.Property<decimal?>("SOH")
                        .HasPrecision(5, 2)
                        .HasColumnType("DECIMAL(5,2)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)")
                        .HasComment("是否已上传");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_Battery_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("energy_battery", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Energy.Configs.Config", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("varchar2");

                    b.Property<decimal?>("HighHighLimit")
                        .HasPrecision(12, 4)
                        .HasColumnType("DECIMAL(12,4)");

                    b.Property<decimal?>("HighLimit")
                        .HasPrecision(12, 4)
                        .HasColumnType("DECIMAL(12,4)");

                    b.Property<int?>("Interval")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte>("IsDevice")
                        .HasColumnType("NUMBER(3)");

                    b.Property<byte>("IsEnabled")
                        .HasColumnType("NUMBER(3)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar2");

                    b.Property<string>("Number")
                        .HasMaxLength(30)
                        .HasColumnType("varchar2");

                    b.Property<DateTime?>("create_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("delete_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("update_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("energy_config", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Energy.Flowmeters.Flowmeter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("ConsAcc")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)");

                    b.Property<decimal?>("ConsAct")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("Density")
                        .HasPrecision(9, 4)
                        .HasColumnType("DECIMAL(9,4)");

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("DeviceType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("FuelType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<decimal?>("Temperature")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)")
                        .HasComment("是否已上传");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_Flowmeter_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("energy_flowmeter", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Energy.Generators.Generator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("BearingTEMP")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("BearingTEMPBack")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("BearingTEMPFront")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("ControlPressure")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("CoolingWaterPressure")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("CoolingWaterTEMPIn")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("CoolingWaterTEMPOut")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("CurrentL1")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("CurrentL2")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("CurrentL3")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("CylinderTEMP1")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("CylinderTEMP2")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("CylinderTEMP3")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("CylinderTEMP4")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("CylinderTEMP5")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("CylinderTEMP6")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<decimal?>("FrequencyL1")
                        .HasPrecision(8)
                        .HasColumnType("DECIMAL(8,0)");

                    b.Property<decimal?>("FrequencyL2")
                        .HasPrecision(8)
                        .HasColumnType("DECIMAL(8,0)");

                    b.Property<decimal?>("FrequencyL3")
                        .HasPrecision(8)
                        .HasColumnType("DECIMAL(8,0)");

                    b.Property<decimal?>("FreshWaterPressure")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("FreshWaterTEMPIn")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("FreshWaterTEMPOut")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("FuelPressure")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("FuelTEMP")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<byte>("IsRuning")
                        .HasColumnType("NUMBER(3)");

                    b.Property<decimal?>("LoadRatio")
                        .HasPrecision(7, 4)
                        .HasColumnType("DECIMAL(7,4)");

                    b.Property<decimal?>("LubePressure")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("LubeTEMP")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<decimal?>("Power")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("PowerFactor")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("RPM")
                        .HasPrecision(6)
                        .HasColumnType("DECIMAL(6,0)");

                    b.Property<decimal?>("ReactivePower")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<decimal?>("ScavengingPressure")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("ScavengingTEMP")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("StartPressure")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("SuperchargerTEMPIn")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("SuperchargerTEMPOut")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)")
                        .HasComment("是否已上传");

                    b.Property<decimal?>("VoltageL1L2")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("VoltageL1L3")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("VoltageL2L3")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("WindingTEMPL1")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("WindingTEMPL2")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("WindingTEMPL3")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_Generator_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("energy_generator", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Energy.LiquidLevels.LiquidLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<decimal?>("Level")
                        .HasPrecision(6, 4)
                        .HasColumnType("DECIMAL(6,4)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<decimal?>("Temperature")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)")
                        .HasComment("是否已上传");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_LiquidLevel_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("energy_liquidlevel", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Energy.PowerUnits.PowerUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("DGO")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)")
                        .HasComment("柴油瞬时消耗");

                    b.Property<decimal?>("DGOAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("柴油累积消耗");

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("DeviceType")
                        .HasColumnType("NVARCHAR2(450)")
                        .HasComment("动力单元类型:me:主机 ae:辅机 blr:锅炉");

                    b.Property<decimal?>("Ethanol")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)")
                        .HasComment("乙醇瞬时消耗");

                    b.Property<decimal?>("EthanolAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("乙醇累积消耗");

                    b.Property<decimal?>("HFO")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)")
                        .HasComment("重油瞬时消耗");

                    b.Property<decimal?>("HFOAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("重油累积消耗");

                    b.Property<decimal?>("LFO")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)")
                        .HasComment("低硫重油瞬时消耗");

                    b.Property<decimal?>("LFOAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("低硫重油累积消耗");

                    b.Property<decimal?>("LNG")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)")
                        .HasComment("液化天然气瞬时消耗");

                    b.Property<decimal?>("LNGAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("液化天然气累积消耗");

                    b.Property<decimal?>("LPG_B")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)")
                        .HasComment("液化石油气(丁烷)瞬时消耗");

                    b.Property<decimal?>("LPG_BAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("液化石油气(丁烷)累积消耗");

                    b.Property<decimal?>("LPG_P")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)")
                        .HasComment("液化石油气(丙烷)瞬时消耗");

                    b.Property<decimal?>("LPG_PAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("液化石油气(丙烷)累积消耗");

                    b.Property<decimal?>("Methanol")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)")
                        .HasComment("甲醇瞬时消耗");

                    b.Property<decimal?>("MethanolAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("甲醇累积消耗");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)")
                        .HasComment("是否已上传");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DeviceType", "Number", "ReceiveDatetime" }, "UK_PowerUnit_DNR")
                        .IsUnique()
                        .HasFilter("\"DeviceType\" IS NOT NULL AND \"Number\" IS NOT NULL");

                    b.ToTable("energy_powerunit", null, t =>
                        {
                            t.HasComment("动力单元能耗");
                        });
                });

            modelBuilder.Entity("hmt_energy_csharp.Energy.Predictions.Prediction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("DGO")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("Ethanol")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)")
                        .HasComment("乙醇");

                    b.Property<decimal?>("HFO")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("LFO")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("LNG")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("LPG_B")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("LPG_P")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("Methanol")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)")
                        .HasComment("是否已上传");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime" }, "UK_Prediction_NR")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL");

                    b.ToTable("energy_prediction", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Energy.Shafts.Shaft", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<double?>("Energy")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<decimal?>("Power")
                        .HasPrecision(7, 2)
                        .HasColumnType("DECIMAL(7,2)");

                    b.Property<decimal?>("RPM")
                        .HasPrecision(7, 2)
                        .HasColumnType("DECIMAL(7,2)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<double?>("Revolutions")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<decimal?>("Thrust")
                        .HasPrecision(7, 2)
                        .HasColumnType("DECIMAL(7,2)");

                    b.Property<decimal?>("Torque")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)")
                        .HasComment("是否已上传");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_Shaft_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("energy_shaft", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Energy.SternSealings.SternSealing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("BackLeftTEMP")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("BackRightTEMP")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<decimal?>("BackTEMP")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<decimal?>("FrontTEMP")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)")
                        .HasComment("是否已上传");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_SternSealing_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("energy_sternsealing", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Energy.SupplyUnits.SupplyUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<byte>("IsRuning")
                        .HasColumnType("NUMBER(3)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<decimal?>("Pressure")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<decimal?>("Temperature")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)")
                        .HasComment("是否已上传");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_SupplyUnit_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("energy_supplyunit", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Energy.TotalIndicators.TotalIndicator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("DGO")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("DGOAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("柴油累积消耗");

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("Ethanol")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("EthanolAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("乙醇累积消耗");

                    b.Property<decimal?>("HFO")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("HFOAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("重油累积消耗");

                    b.Property<decimal?>("LFO")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("LFOAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("低硫重油累积消耗");

                    b.Property<decimal?>("LNG")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("LNGAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("液化天然气累积消耗");

                    b.Property<decimal?>("LPG_B")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("LPG_BAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("液化石油气(丁烷)累积消耗");

                    b.Property<decimal?>("LPG_P")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("LPG_PAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("液化石油气(丙烷)累积消耗");

                    b.Property<decimal?>("Methanol")
                        .HasPrecision(10, 4)
                        .HasColumnType("DECIMAL(10,4)");

                    b.Property<decimal?>("MethanolAccumulated")
                        .HasPrecision(14, 4)
                        .HasColumnType("DECIMAL(14,4)")
                        .HasComment("甲醇累积消耗");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<decimal?>("Power")
                        .HasPrecision(7, 2)
                        .HasColumnType("DECIMAL(7,2)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<decimal?>("Rpm")
                        .HasPrecision(10, 2)
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<decimal?>("Thrust")
                        .HasPrecision(7, 2)
                        .HasColumnType("DECIMAL(7,2)");

                    b.Property<decimal?>("Torque")
                        .HasPrecision(6, 2)
                        .HasColumnType("DECIMAL(6,2)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)")
                        .HasComment("是否已上传");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime" }, "UK_TotalIndicator_NR")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL");

                    b.ToTable("energy_totalindicator", null, t =>
                        {
                            t.HasComment("多传感器累积量");
                        });
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.AssistantDecisions.AssistantDecision", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Key")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int?>("State")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_AssistantDecision_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_assistantdecision", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.CompositeBoilers.CompositeBoiler", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double?>("BLRBurnerRunning")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRDGOService")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRDGOTempHigh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRFOP1On")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRFOP2On")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRFOPressHigh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRFOTempHigh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRFOTempLow")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRGE1EXTempHigh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRGE2EXTempHigh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRHFOService")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRHFOTempHigh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_CompositeBoiler_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_compositeboiler", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.CompressedAirSupplies.CompressedAirSupply", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<double?>("ExhaustValuePress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEControlPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEStartPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_CompressedAirSupply_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_compressedairsupply", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.CoolingFreshWaters.CoolingFreshWater", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double?>("CCLTCFWOutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int?>("LTCFW1Press")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("LTCFW2Press")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("LTCFW3Press")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("LTCFWPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("MEJWCOutPress")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_CoolingFreshWater_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_coolingfreshwater", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.CoolingSeaWaters.CoolingSeaWater", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double?>("CSWOutPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("CSWOutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_CoolingSeaWater_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_coolingseawater", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.CoolingWaters.CoolingWater", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<double?>("MEACInPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEACInTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEACOutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MECCCyl1OutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MECCCyl2OutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MECCCyl3OutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MECCCyl4OutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MECCCyl5OutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MECCCyl6OutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEInTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEJacketCyl1OutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEJacketCyl2OutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEJacketCyl3OutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEJacketCyl4OutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEJacketCyl5OutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEJacketCyl6OutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEJacketInPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEJacketPressDrop")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEOutPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEPressDrop")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_CoolingWater_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_coolingwater", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.CylinderLubOils.CylinderLubOil", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<double?>("MEInTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_CylinderLubOil_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_cylinderluboil", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.ExhaustGases.ExhaustGas", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<double?>("MEACInTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEACOutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MECyl1AfterTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MECyl2AfterTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MECyl3AfterTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MECyl4AfterTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MECyl5AfterTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MECyl6AfterTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEReceiverPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("METCInTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("METCOutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("METurbBackPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_ExhaustGas_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_exhaustgas", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.FOSupplyUnits.FOSupplyUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("DGOService")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int?>("HFOService")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_FOSupplyUnit_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_fosupplyunit", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.FOs.FO", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int?>("MEHPOPLeakage")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("MEInPressure")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEInTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_FO_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_fo", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.LubOilPurifyings.LubOilPurifying", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int?>("MEFilterPressHigh")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_LubOilPurifying_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_luboilpurifying", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.LubOils.LubOil", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int?>("MECYL1PistonCOOutNoFlow")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("MECYL1PistonCOOutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("MECYL2PistonCOOutNoFlow")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("MECYL2PistonCOOutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("MECYL3PistonCOOutNoFlow")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("MECYL3PistonCOOutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("MECYL4PistonCOOutNoFlow")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("MECYL4PistonCOOutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("MECYL5PistonCOOutNoFlow")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("MECYL5PistonCOOutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("MECYL6PistonCOOutNoFlow")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("MECYL6PistonCOOutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEInTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEMBTBInPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEPistonCOInPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("METBSTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("METCInPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("METCOutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("MEWaterHigh")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_LubOil_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_luboil", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.MERemoteControls.MERemoteControl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<double?>("MERpm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_MERemoteControl_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_meremotecontrol", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.MainGeneratorSets.MainGeneratorSet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double?>("DGBTDTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGBoostAirPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGCFWInPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGCFWOutTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("DGControlAirPress")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DGCyl1ExTemp")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DGCyl2ExTemp")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DGCyl3ExTemp")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DGCyl4ExTemp")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DGCyl5ExTemp")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DGCyl6ExTemp")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("DGEGTC1To3InTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGEGTC4To6InTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("DGEngineLoad")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DGEngineRunHour")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DGEngineRunning")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DGEngineSpeed")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("DGFOInPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("DGLOFilterInPress")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DGLOInPress")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("DGLOInTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGLOPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGStartAirPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("DGTCEXOutTemp")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("DGTCLOPress")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("DGUTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGVTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGWTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_MainGeneratorSet_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_maingeneratorset", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.MainSwitchboards.MainSwitchboard", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double?>("DGCurrentL1")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGCurrentL2")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGCurrentL3")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGFrequency")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGPower")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGPowerFactor")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGRunning")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGVoltageL1L2")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGVoltageL2L3")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGVoltageL3L1")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<double?>("MBFrequencyHigh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MBFrequencyLow")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MBVoltageHigh")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MBVoltageLow")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_MainSwitchboard_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_mainswitchboard", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.Miscellaneouses.Miscellaneous", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<double?>("MEAxialVibration")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int?>("MECCOMHigh")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("MELoad")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("METCSpeed")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_Miscellaneous_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_miscellaneous", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.ScavengeAirs.ScavengeAir", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<double?>("ERAmbientPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("ERRelativeHumidity")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("ERTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MECoolerPressDrop")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEFBCyl1Temp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEFBCyl2Temp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEFBCyl3Temp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEFBCyl4Temp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEFBCyl5Temp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEFBCyl6Temp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEPress")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEReceiverTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("METCInTempA")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("METCInTempB")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_ScavengeAir_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_scavengeair", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.Engineroom.ShaftClutches.ShaftClutch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceNo")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<double?>("InterTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<double?>("SternAftTemp")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Number", "ReceiveDatetime", "DeviceNo" }, "UK_ShaftClutch_NRD")
                        .IsUnique()
                        .HasFilter("\"Number\" IS NOT NULL AND \"DeviceNo\" IS NOT NULL");

                    b.ToTable("engineroom_shaftclutch", (string)null);
                });

            modelBuilder.Entity("hmt_energy_csharp.VesselInfos.VesselInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("AsternDraft")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLGHFOCACC")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLGMDOCACC")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRFCPerNm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRHFOCPerNm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRHFOConsumption")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRMDOCPerNm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRMDOConsumption")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BLRSFOC")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("BowDraft")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Course")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGFCPerNm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGHFOCACC")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGHFOCPerNm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGHFOConsumption")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGMDOCACC")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGMDOCPerNm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGMDOConsumption")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGPower")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DGSFOC")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Depth")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DepthOffset")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Draft")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("FCPerNm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("GroundSpeed")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("HFOCPerNm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Heel")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MDOCPerNm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEFCPerNm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEHFOCACC")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEHFOCPerNm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEHFOConsumption")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEMDOCACC")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEMDOCPerNm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEMDOConsumption")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MEPower")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MERpm")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MESFOC")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("MagneticVariation")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("PortDraft")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Pressure")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<DateTime>("ReceiveDatetime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<double?>("ResetDistanceGrd")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("ResetDistanceWat")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("RtCII")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("SFOC")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("SN")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("NVARCHAR2(36)");

                    b.Property<double?>("SeaTemperature")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Slip")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("StarBoardDraft")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("varchar2");

                    b.Property<double?>("Temperature")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Thrust")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Torque")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("TotalDistanceGrd")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("TotalDistanceWat")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Trim")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<byte>("Uploaded")
                        .HasColumnType("NUMBER(3)")
                        .HasComment("是否已上传");

                    b.Property<double?>("Visibility")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("WaterSpeed")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("WaveDirection")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("WaveHeight")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Weather")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<double?>("WindDirection")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("WindSpeed")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("X")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Y")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<DateTime>("create_time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasDefaultValueSql("SYSTIMESTAMP");

                    b.Property<DateTime?>("delete_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("update_time")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ReceiveDatetime", "SN" }, "UK_VesselInfo_RS")
                        .IsUnique();

                    b.ToTable("vesselinfo", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
